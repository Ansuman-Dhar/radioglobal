{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\code\\\\Web\\\\RadioGlobal - react native\\\\RadioGlobal\\\\components\\\\radioList.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Audio } from \"expo-av\";\nimport ListItem from \"./ListItem\";\nexport default function radioList(_ref) {\n  var _this = this;\n\n  var stations = _ref.stations;\n\n  var _useState = useState({\n    name: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPlaying = _useState2[0],\n      setCurrentPlaying = _useState2[1];\n\n  var soundObject = new Audio.Sound();\n\n  var playAudio = function playAudio(item) {\n    return _regeneratorRuntime.async(function playAudio$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(item == null)) {\n              _context.next = 11;\n              break;\n            }\n\n            console.log(currentPlaying);\n            console.log(currentPlaying.url);\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(soundObject.loadAsync({\n              uri: currentPlaying.url\n            }));\n\n          case 5:\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(soundObject.stopAsync());\n\n          case 7:\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(soundObject.unloadAsync());\n\n          case 9:\n            _context.next = 22;\n            break;\n\n          case 11:\n            setCurrentPlaying(item);\n            _context.prev = 12;\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(soundObject.loadAsync({\n              uri: item.url\n            }));\n\n          case 15:\n            _context.next = 17;\n            return _regeneratorRuntime.awrap(soundObject.playAsync());\n\n          case 17:\n            _context.next = 22;\n            break;\n\n          case 19:\n            _context.prev = 19;\n            _context.t0 = _context[\"catch\"](12);\n            console.log(_context.t0);\n\n          case 22:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[12, 19]], Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, React.createElement(FlatList, {\n    style: styles.list,\n    data: stations,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          playAudio(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, React.createElement(ListItem, {\n        item: item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.player,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, currentPlaying.name), React.createElement(Button, {\n    title: \"STOP\",\n    onPress: playAudio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  list: {\n    backgroundColor: \"#333\"\n  },\n  container: {\n    backgroundColor: \"#333\",\n    flex: 1\n  },\n  player: {\n    height: 100,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"white\"\n  }\n});","map":{"version":3,"sources":["C:/code/Web/RadioGlobal - react native/RadioGlobal/components/radioList.js"],"names":["React","useState","Audio","ListItem","radioList","stations","name","currentPlaying","setCurrentPlaying","soundObject","Sound","playAudio","item","console","log","url","loadAsync","uri","stopAsync","unloadAsync","playAsync","styles","container","list","player","text","StyleSheet","create","backgroundColor","flex","height","justifyContent","alignItems","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  StyleSheet,\r\n  View,\r\n  FlatList,\r\n  Text,\r\n  TouchableOpacity,\r\n  Button,\r\n} from \"react-native\";\r\nimport { Audio } from \"expo-av\";\r\nimport ListItem from \"./ListItem\";\r\n\r\nexport default function radioList({ stations }) {\r\n  const [currentPlaying, setCurrentPlaying] = useState({\r\n    name: \"\",\r\n  });\r\n  const soundObject = new Audio.Sound();\r\n  const playAudio = async (item) => {\r\n    // await soundObject.unloadAsync();\r\n    if (item == null) {\r\n      console.log(currentPlaying);\r\n      console.log(currentPlaying.url);\r\n      await soundObject.loadAsync({\r\n        uri: currentPlaying.url,\r\n      });\r\n      await soundObject.stopAsync();\r\n      await soundObject.unloadAsync();\r\n    } else {\r\n      setCurrentPlaying(item);\r\n      try {\r\n        await soundObject.loadAsync({\r\n          uri: item.url,\r\n        });\r\n        await soundObject.playAsync();\r\n\r\n        // Your sound is playing!\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <View style={styles.container}>\r\n      <FlatList\r\n        style={styles.list}\r\n        data={stations}\r\n        renderItem={({ item }) => (\r\n          <TouchableOpacity\r\n            onPress={() => {\r\n              playAudio(item);\r\n            }}\r\n          >\r\n            <ListItem item={item} />\r\n          </TouchableOpacity>\r\n        )}\r\n      />\r\n      <View style={styles.player}>\r\n        <Text style={styles.text}>{currentPlaying.name}</Text>\r\n        <Button title=\"STOP\" onPress={playAudio} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  list: {\r\n    backgroundColor: \"#333\",\r\n    // marginBottom: 100,\r\n  },\r\n  container: {\r\n    backgroundColor: \"#333\",\r\n    flex: 1,\r\n  },\r\n  player: {\r\n    height: 100,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    color: \"white\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}